version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: janmitra-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: janmitra
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - janmitra-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: janmitra-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/janmitra?authSource=admin
      - JWT_SECRET=${JWT_SECRET:-your-super-secure-jwt-secret-here}
      - AI_SERVICE_URL=http://ai-services:5001
    depends_on:
      - mongodb
      - ai-services
    volumes:
      - backend_uploads:/app/uploads
    networks:
      - janmitra-network

  # AI Services
  ai-services:
    build:
      context: ./ai-services
      dockerfile: Dockerfile
    container_name: janmitra-ai
    restart: unless-stopped
    ports:
      - "5001:5001"
    environment:
      - FLASK_ENV=production
      - FLASK_APP=app.py
    networks:
      - janmitra-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: janmitra-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - ai-services
    networks:
      - janmitra-network

volumes:
  mongodb_data:
  backend_uploads:

networks:
  janmitra-network:
    driver: bridge
